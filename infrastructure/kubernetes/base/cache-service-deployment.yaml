apiVersion: apps/v1
kind: Deployment
metadata:
  name: cache-service
  namespace: borrow-rate-engine
  labels:
    app: borrow-rate-engine
    component: cache-service
    environment: ${ENV}
    managed-by: kustomize
  annotations:
    description: "Cache Service for Borrow Rate & Locate Fee Pricing Engine"
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: borrow-rate-engine
      component: cache-service
  template:
    metadata:
      labels:
        app: borrow-rate-engine
        component: cache-service
        environment: ${ENV}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: cache-service
        image: ${ECR_REPO}/cache-service:${VERSION}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: "500m"
            memory: "2Gi"
          limits:
            cpu: "2000m"
            memory: "8Gi"
        env:
        - name: ENVIRONMENT
          value: ${ENV}
        - name: LOG_LEVEL
          value: ${LOG_LEVEL}
        - name: ENABLE_METRICS
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: ENABLE_METRICS
        - name: ENABLE_TRACING
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: ENABLE_TRACING
        - name: REQUEST_TIMEOUT
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: REQUEST_TIMEOUT
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: REDIS_DB
        - name: REDIS_MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: REDIS_MAX_CONNECTIONS
        - name: REDIS_SOCKET_KEEPALIVE
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: REDIS_SOCKET_KEEPALIVE
        - name: REDIS_HEALTH_CHECK_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: REDIS_HEALTH_CHECK_INTERVAL
        - name: BORROW_RATE_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: BORROW_RATE_TTL
        - name: VOLATILITY_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: VOLATILITY_TTL
        - name: EVENT_RISK_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: EVENT_RISK_TTL
        - name: BROKER_CONFIG_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: BROKER_CONFIG_TTL
        - name: CALCULATION_RESULT_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: CALCULATION_RESULT_TTL
        - name: MIN_RATE_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: MIN_RATE_TTL
        - name: ENABLE_LOCAL_CACHE
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: ENABLE_LOCAL_CACHE
        - name: LOCAL_CACHE_MAX_SIZE
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: LOCAL_CACHE_MAX_SIZE
        - name: LOCAL_CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: LOCAL_CACHE_TTL
        - name: ENABLE_PUBSUB
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: ENABLE_PUBSUB
        - name: PUBSUB_CHANNEL
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: PUBSUB_CHANNEL
        - name: ENABLE_CACHE_STATS
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: ENABLE_CACHE_STATS
        - name: CACHE_WARMUP_ON_STARTUP
          valueFrom:
            configMapKeyRef:
              name: cache-service-config
              key: CACHE_WARMUP_ON_STARTUP
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: cache-data
          mountPath: /data
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: cache-service-config
      - name: cache-data
        emptyDir: {}
      - name: tmp-volume
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - cache-service
              topologyKey: kubernetes.io/hostname
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - cache-service
              topologyKey: topology.kubernetes.io/zone
      terminationGracePeriodSeconds: 30