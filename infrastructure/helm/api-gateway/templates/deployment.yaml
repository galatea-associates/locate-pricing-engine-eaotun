apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
  {{- if .Values.podAnnotations }}
  annotations:
    {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  {{- if .Values.strategy }}
  strategy:
    {{- toYaml .Values.strategy | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
      {{- if .Values.podAnnotations }}
      annotations:
        {{- include "common.tplvalues.render" (dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "common.names.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.securityContext }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          # Environment variables defined directly in values.yaml
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- if .Values.secrets.databaseCredentials }}
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.databaseCredentials.name }}
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.databaseCredentials.name }}
                  key: port
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.databaseCredentials.name }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.databaseCredentials.name }}
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.databaseCredentials.name }}
                  key: database
            {{- end }}
            {{- if .Values.secrets.redisCredentials }}
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redisCredentials.name }}
                  key: host
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redisCredentials.name }}
                  key: port
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.redisCredentials.name }}
                  key: password
            {{- end }}
            {{- if .Values.secrets.externalApiCredentials }}
            - name: SECLEND_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.externalApiCredentials.name }}
                  key: seclend_api_key
            - name: MARKET_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.externalApiCredentials.name }}
                  key: market_api_key
            - name: EVENT_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.externalApiCredentials.name }}
                  key: event_api_key
            {{- end }}
            {{- if .Values.secrets.jwtSecret }}
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.jwtSecret.name }}
                  key: secret_key
            {{- end }}
          # ConfigMap references
          {{- if and .Values.configmap.enabled .Values.configmap.name }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configmap.name }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}